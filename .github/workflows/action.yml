# This workflow will build a Java project with Gradle
# For more information see: https://help.github.com/actions/language-and-framework-guides/building-and-testing-java-with-gradle

name: CI/CD with Github Action

on:
  push:
    branches: [ main ]
    tags:
      - '*'
  pull_request:
    branches: [ main ]

jobs:
  compile:
    name: Compile
    runs-on: ubuntu-latest
    steps:
    - name: cache step
      uses: actions/cache@v2
      id: cache-node-modules
      env:
        CACHE_NAME: cache-node-modules
      with:
        path: |
          ~/.gradle/caches
          ~/.gradle/wrapper
        key: ${{ env.CACHE_NAME }}-${{ hashFiles('**/*.gradle*', '**/gradle-wrapper.properties') }}
        restore-keys: |
          ${{ env.CACHE_NAME }}-
    - uses: actions/checkout@v2
    - name: Set up JDK 11
      if: steps.cache-node-modules.outputs.cache-hit != 'true'
      uses: actions/setup-java@v1
      with:
        java-version: 11
    - name: Grant execute permission for gradlew
      run: chmod +x gradlew
    - name: Compile with Gradle
      run: |
        ./gradlew compileJava
        ./gradlew processResources
        ./gradlew classes
  test:
    name: Test
    needs: compile
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
    - name: Grant execute permission for gradlew
      run: chmod +x gradlew
    - name: Test with Gradle
      run: |
        ./gradlew compileTestJava
        ./gradlew processTestResources
        ./gradlew testClasses
        ./gradlew test
    - name: Storing workflow test report directory
      uses: actions/upload-artifact@v2
      with:
        name: testReport
        path: build/reports

  assemble:
    name: Assemble
    needs: test
    runs-on: ubuntu-latest
    outputs:
      jar_name: ${{ steps.step_get_jar_name.outputs.jar_name }}
      artifact_jar_name: ${{ steps.step_get_artifact_jar_name.outputs.jar_name }}
    steps:
    - uses: actions/checkout@v2
    - name: Grant execute permission for gradlew
      run: chmod +x gradlew
    - name: Assemble with Gradle
      run: |
        ./gradlew jar
        ./gradlew assemble
    - id: step_get_jar_name
      run: echo "::set-output name=jar_name::$(find ./build/libs -name '*.jar' -exec basename {} \;)"
    - id: step_get_artifact_jar_name
      run: echo "::set-output name=jar_name::buildJar"
    - name: Storing workflow assemble jar file
      uses: actions/upload-artifact@v2
      with:
        name: ${{ steps.step_get_artifact_jar_name.outputs.jar_name }}
        path: build/libs/

  # testname:
  #   name: Testname
  #   needs: assemble
  #   runs-on: ubuntu-latest
  #   steps:
  #   - name: Print jar name
  #     run: echo ${{needs.assemble.outputs.jar_name}}

  release:
    name: Release
    if: github.event_name == 'push' && contains(github.ref, 'refs/tags/')
    needs: assemble
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Get release name
        id: getReleaseName
        run: echo ::set-output name=RELEASE_NAME::${GITHUB_REF/refs\/tags\//}
      - name: Download jar file
        uses: actions/download-artifact@v2
        with:
          name: ${{needs.assemble.outputs.artifact_jar_name}}
      # - name: Display
      #   run: "ls -la"
      - name: Release
        uses: softprops/action-gh-release@v1
        with:
          # tag_name: ${{ steps.getReleaseName.outputs.RELEASE_NAME }}
          name: ${{ steps.getReleaseName.outputs.RELEASE_NAME }}
          files: ${{needs.assemble.outputs.jar_name}}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
